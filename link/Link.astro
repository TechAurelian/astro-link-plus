---
/**
 * @license
 * Copyright (c) TechAurelian {@link https://techaurelian.com}
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import type { LinkType } from "./types";
import { isExternalLink, parseWithUrlMap, addUtmParameters } from "./utils";

type Props = LinkType;

const {
  addUtm = false,
  href,
  newTab,
  noFollowRel,
  noReferrerRel,
  sponsoredRel,
  ugcRel,
  utmAsReferrer = false,
  utmCampaign,
  utmContent,
  utmMedium = "link",
  utmSource = "website",
  utmTerm,
} = Astro.props;

// Ensure that the href prop is present
if (!href) throw new Error("Link requires a href prop");

let cHref = href.toString();

// Replace any parts of the url between '{' and '}' with the value from the url map passed to the integration
const urlMap = globalThis.astroLinkPlusOptions.urlMap;
if (urlMap) {
  // console.log(`urlMap2: ${JSON.stringify(urlMap)}`);
  cHref = parseWithUrlMap(cHref, urlMap);
}

// Decide if the link should open in a new tab
const isExternal = isExternalLink(cHref);
const cNewTab = newTab || (isExternal && newTab !== false);

// Add UTM params to the link
if (addUtm) {
  cHref = addUtmParameters(
    cHref,
    utmAsReferrer,
    utmSource,
    utmMedium,
    utmCampaign,
    utmTerm,
    utmContent
  );
}

// console.log(`cHref: ${cHref}`);
---

<a
  href={cHref}
  target={cNewTab ? "_blank" : null}
  rel={cNewTab ? "noopener" : null}
>
  <slot />
</a>
