---
import type { LinkProps } from '../src/types';
import { isExternalLink, parseWithUrlMap, addUtmParameters } from '../src/utils';

type Props = LinkProps;

const {
  href,
  newTab,
  addUtm = false,
  utmAsReferrer = false,
  utm_source = 'website',
  utm_medium = 'link',
  utm_campaign,
  utm_term,
  utm_content,
  ...props
} = Astro.props;

// Ensure that the href prop is present
if (!href) throw new Error('Link requires a href prop');

let cHref = href.toString();

// Replace any parts of the url between '{' and '}' with the value from the url map passed to the integration
const urlMap = globalThis.astroLinkPlusOptions.urlMap;
if (urlMap) {
  console.log(`urlMap2: ${JSON.stringify(urlMap)}`);
  cHref = parseWithUrlMap(cHref, urlMap);
}

// Decide if the link should open in a new tab
const isExternal = isExternalLink(cHref);
const cNewTab = newTab || (isExternal && newTab !== false);

// Add UTM params to the link
if (addUtm) {
  cHref = addUtmParameters(
    cHref,
    utmAsReferrer,
    utm_source,
    utm_medium,
    utm_campaign,
    utm_term,
    utm_content
  );
}

// console.log(`cHref: ${cHref}`);
---

<a
  href={cHref}
  target={cNewTab ? '_blank' : null}
  rel={isExternal ? 'noopener noreferrer' : null}
  {...props}
>
  <slot />
</a>
